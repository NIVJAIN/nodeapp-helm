---
# Source: helm-chart-nodeapp/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dd-helm-chart-nodeapp
  labels:
    helm.sh/chart: helm-chart-nodeapp-0.1.0
    app.kubernetes.io/name: helm-chart-nodeapp
    app.kubernetes.io/instance: dd
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: helm-chart-nodeapp/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: dd-secret
type: Opaque
data:
  mongo-root-username: dXNlcm5hbWU=
  mongo-root-password: cGFzc3dvcmQ=
  mongo-database-name: cG9k
---
# Source: helm-chart-nodeapp/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dd-configmap
data:
  mongo-root-username: dXNlcm5hbWU=
  mongo-root-password: cGFzc3dvcmQ=
  mongo-database-name: cG9k
  default.conf:     server {
        listen       80;
        server_name  localhost;
    
        location / {
            proxy_pass http://rancher.com/;
        }
    
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
# Source: helm-chart-nodeapp/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dd-helm-chart-nodeapp
  labels:
    helm.sh/chart: helm-chart-nodeapp-0.1.0
    app.kubernetes.io/name: helm-chart-nodeapp
    app.kubernetes.io/instance: dd
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: helm-chart-nodeapp
    app.kubernetes.io/instance: dd
---
# Source: helm-chart-nodeapp/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dd-helm-chart-nodeapp
  labels:
    helm.sh/chart: helm-chart-nodeapp-0.1.0
    app.kubernetes.io/name: helm-chart-nodeapp
    app.kubernetes.io/instance: dd
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: helm-chart-nodeapp
      app.kubernetes.io/instance: dd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: helm-chart-nodeapp
        app.kubernetes.io/instance: dd
    spec:
      serviceAccountName: dd-helm-chart-nodeapp
      securityContext:
        {}
      containers:
        - name: helm-chart-nodeapp
          securityContext:
            {}
          # image: "nivjain/k8s-nodeapp:v1:1.16.0"
          image: "nivjain/k8s-nodeapp:v1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: nodeapp-conf
              mountPath: /nodeapp/config
            - name: nodeapp-secret
              mountPath: /nodeapp/secret 
          resources:
            {}
      volumes:
        - name: nodeapp-conf
          configMap:
            name: dd-configmap
        - name: nodeapp-secret
          secret:
            secretName: dd-secret
